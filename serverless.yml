service: ordeneya

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  lambdaHashingVersion: 20201221
  environment:
    REGION: ${self:provider.region}
    PENDING_ORDER_QUEUE:
      Ref: PendingOrdersQueue
    PENDING_ORDER_QUEUE_NAME: "PendingOrdersQueue"
    ORDER_TABLE: OrdersTable

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: "arn:aws:sqs:${self:provider.region}:*:${self:provider.environment.PENDING_ORDER_QUEUE_NAME}"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.ORDER_TABLE}"
  

functions:
  createOrderService:
    handler: handler.createOrder
    events: 
      - http:
          path: order
          method: post
  getOrderService:
    handler: handler.getOrder
    events: 
      - http:
          path: order/{orderId}
          method: get
  prepareOrderService:
    handler: handler.prepareOrder
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PendingOrdersQueue
              - Arn
          batchSize: 1 
  sendOrderService:
    handler: handler.sendOrder
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - ${self:provider.environment.ORDER_TABLE}
              - StreamArn


resources:
  Resources:
    PendingOrdersQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.PENDING_ORDER_QUEUE_NAME}
    OrdersTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.ORDER_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    
